package fr.formation.inti.entity;
// Generated 6 f�vr. 2023 � 12:03:42 by Hibernate Tools 5.1.12.Final

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Columns;

/**
 * UsersInstruments generated by hbm2java
 */
@Entity
@Table(name = "users_instruments", catalog = "bd_music_project")
public class UsersInstruments implements java.io.Serializable {

	private UsersInstrumentsId id;
	private Musicinstruments musicinstruments;
	private Users users;
	private Integer niveau;

	public UsersInstruments() {
	}

	public UsersInstruments(UsersInstrumentsId id, Musicinstruments musicinstruments, Users users) {
		this.id = id;
		this.musicinstruments = musicinstruments;
		this.users = users;
	}
	
	
	@Column(name = "niveau",  nullable = false)
	public Integer getNiveau() {
		return niveau;
	}

	public void setNiveau(Integer niveau) {
		this.niveau = niveau;
	}

	@EmbeddedId

	@AttributeOverrides({ @AttributeOverride(name = "usersId", column = @Column(name = "Users_id", nullable = false)),
			@AttributeOverride(name = "instrId", column = @Column(name = "Instr_id", nullable = false)) })
	public UsersInstrumentsId getId() {
		return this.id;
	}

	public void setId(UsersInstrumentsId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Instr_id", nullable = false, insertable = false, updatable = false)
	public Musicinstruments getMusicinstruments() {
		return this.musicinstruments;
	}

	public void setMusicinstruments(Musicinstruments musicinstruments) {
		this.musicinstruments = musicinstruments;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Users_id", nullable = false, insertable = false, updatable = false)
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

}
