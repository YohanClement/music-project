package fr.formation.inti.entity;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Musicinstruments generated by hbm2java
 */
@Entity
@Table(name = "musicinstruments", catalog = "bd_music_project", uniqueConstraints = @UniqueConstraint(columnNames = "Instr_name"))
public class Musicinstruments implements java.io.Serializable{
	
	private Integer instrId;
	private String instrName;
	private String instrType;
	private Set<UsersInstruments> usersInstrumentses = new HashSet<UsersInstruments>(0);

	public Musicinstruments() {
	}

	public Musicinstruments(String instrName) {
		this.instrName = instrName;
	}

	public Musicinstruments(String instrName, String instrType, Set<UsersInstruments> usersInstrumentses) {
		this.instrName = instrName;
		this.instrType = instrType;
		this.usersInstrumentses = usersInstrumentses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "Instr_id", unique = true, nullable = false)
	public Integer getInstrId() {
		return this.instrId;
	}

	public void setInstrId(Integer instrId) {
		this.instrId = instrId;
	}

	@Column(name = "Instr_name", unique = true, nullable = false, length = 500)
	public String getInstrName() {
		return this.instrName;
	}

	public void setInstrName(String instrName) {
		this.instrName = instrName;
	}

	@Column(name = "Instr_type", length = 500)
	public String getInstrType() {
		return this.instrType;
	}

	public void setInstrType(String instrType) {
		this.instrType = instrType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "musicinstruments")
	public Set<UsersInstruments> getUsersInstrumentses() {
		return this.usersInstrumentses;
	}

	public void setUsersInstrumentses(Set<UsersInstruments> usersInstrumentses) {
		this.usersInstrumentses = usersInstrumentses;
	}

}
